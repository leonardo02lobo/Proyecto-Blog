@using MySql.Data.MySqlClient
@using Proyecto_Blog.Controllers
@using Proyecto_Blog.Models
@rendermode InteractiveServer

<style>
    #tarjeta:hover {
        box-shadow: 30px 30px 30px #000;
        transition: .5s all;
        cursor: pointer;
    }

    #etiqueta {
        color: white;
        border: 2px black solid;
        background-color: rgba(128, 128, 128, 0.5);
        border-radius: 20px;
        display: inline;
        padding: 8px;
    }
</style>

<p>@MensajeError</p>

<section class="justify-content-md-start">
    <button type="button" class="btn" data-bs-toggle="button" @onclick=@(_=>MostrarMensaje("Todo"))>Todo</button>
    <button type="button" class="btn" data-bs-toggle="button"
        @onclick=@(_=>MostrarMensaje("deportes"))>deportes</button>
    <button type="button" class="btn" data-bs-toggle="button"
        @onclick=@(_=>MostrarMensaje("videojuegos"))>videojuegos</button>
    <button type="button" class="btn" data-bs-toggle="button" @onclick=@(_=>MostrarMensaje("anime"))>anime</button>
</section>
<div class="card">
    @foreach (Tarjetas t in tarjetasSegundarias)
    {
        <div class="col m-4">
            <div class="card" style="border: 2px solid black" id="tarjeta">
                <div class="card text-bg-dark">
                    <img src="@t.getUrlImagen()" class="card-img" alt="foto de una persona relax">
                    <div class="card-img-overlay">
                        <h5 class="card-title" id="etiqueta">@t.getEtiquetas()</h5>
                    </div>
                </div>
                <div class="card-body">
                    <h5 class="card-title">@t.getTitulo()</h5>
                    <p class="card-text">@t.getDescripcion()</p>
                    <div class="col d-flex">
                        <img style="border-radius: 50%; width: 40px;" src="/resource/avatar.png" alt="Avatar" />
                        <p class="card-text">@t.getPerfil()</p>
                        <button type="button" class="btn btn-primary" @onclick=@(_=>MirarTarjeta(t))>Ver</button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public EventCallback<(bool,Tarjetas)> IsVisible { get; set; }
    private string? categoria { get; set; }
    private List<Tarjetas> tarjetas = new List<Tarjetas>();
    ControladorTarjetas? controladorTarjetas = null;
    private List<Tarjetas> tarjetasSegundarias = new List<Tarjetas>();
    private string? MensajeError = "";

    protected override void OnInitialized()
    {
        controladorTarjetas = new ControladorTarjetas(new Tarjetas("", "", "", "", 0, ""));
        try{
             rellenarList(controladorTarjetas.AccederTablaTarjetas());
        }catch(MySqlException e){
            MensajeError = e.Message;
        }catch(InvalidOperationException e){
            MensajeError = e.Message;
        }
    }

    private void rellenarList(MySqlDataReader? reader)
    {
        if (reader == null)
        {
            MensajeError = "Reader is null.";
            return;
        }

        using (reader)
        {
            try
            {
                while (reader.Read())
                {
                    tarjetas.Add(new Tarjetas(reader.GetString(0), reader.GetString(1), reader.GetString(2), reader.GetString(3),
                    reader.GetInt32(4), reader.GetString(5)));
                }
            }
            catch (MySqlException e)
            {
                MensajeError = e.Message;
            }
            catch (NullReferenceException e)
            {
                MensajeError = e.Message;
            }
        }
        tarjetasSegundarias = new List<Tarjetas>(tarjetas);
    }

    private void MostrarMensaje(string valor)
    {
        if (valor == "Todo")
        {
            tarjetasSegundarias = new List<Tarjetas>(tarjetas);
            return;
        }
        tarjetasSegundarias = tarjetas.Where(t => t.getEtiquetas().Contains(valor)).ToList();
    }

    private void MirarTarjeta(Tarjetas t){
        IsVisible.InvokeAsync((true,t));

    }
}