@page "/"

@using Proyecto_Blog.Controllers
@using Proyecto_Blog.Models
@using Proyecto_Blog.View.Components
@using Proyecto_Blog.View.Pages
@inject NavigationManager navigation
@rendermode InteractiveServer

<BarraNavegacion Activo=mostrar usuario=usuario ActivoChanged="ObtenerSesion"/>

<main id="principal">
    <div class="row row-cols-1 row-cols-md-3 g-4">
        <div class="col">
            <!--Personal, y se activa cuando se inicia sesion-->
            <div style="position: fixed;">
                @if (usuario != null)
                {
                    <VistaUsuario usuario=usuario />
                }
            </div>
        </div>
        <div class="col">
            @if (idUsuario != 0)
            {
                @if (usuario != null)
                {
                    @if (usuario.getIniciado())
                    {
                        <button class="btn btn-primary" @onclick="Agregar">Agregar Nueva Tarjeta</button>
                    }
                }
            }
            <TarjetasComponentes IsVisible=DarValor />
        </div>
        <div class="col">
            <div style="position: fixed;">
                <!--Vista de las tarjetas-->
                @if (tarjeta != null)
                {
                    <VistaTarjeta tarjetas=tarjeta />
                }
            </div>
        </div>
    </div>

</main>

@code {
    [Parameter]
    public int idUsuario { get; set; }
    private bool mostrar = false;
    private Usuario? usuario { get; set; }
    private Tarjetas? tarjeta = null;

    private void ObtenerSesion(bool band){
        mostrar = band;
        usuario = null;
        tarjeta = null;
    }

    protected override async Task OnInitializedAsync()
    {
        var uri = navigation.ToAbsoluteUri(navigation.Uri); // Obtener la URL completa
        var queryParams = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);

        if (queryParams.TryGetValue("id", out var id))
        {
            idUsuario = Int32.Parse(id!);
            usuario = await new ControladorUsuario(new Usuario()).ObtenerDatos(idUsuario);
            mostrar = true;
        }
    }

    private void DarValor((bool, Tarjetas) valor)
    {
        mostrar = valor.Item1;
        if (valor.Item2 != null)
        {
            tarjeta = valor.Item2;
        }
    }

    private void Agregar()
    {
        navigation.NavigateTo($"AgregarTarjeta?id={idUsuario}");
    }
}