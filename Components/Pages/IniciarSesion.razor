@using MySql.Data.MySqlClient
@using Proyecto_Blog.Models

<div class="container m-5">
    <form @onsubmit="ValidateData">
        <h3>Iniciar Sesion</h3>
        <div class="mb-3">
            <label for="exampleInputEmail1" class="form-label">Ingresar Correo Electronico</label>
            <input type="email" @bind="correo" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" placeholder="Correo Electronico">
        </div>
        <div class="mb-3">
            <label for="exampleInputPassword1" class="form-label">Ingresar La Contraseña</label>
            <input type="password" @bind="contrasenia" class="form-control" id="exampleInputPassword1" placeholder="contraseña">
        </div>
        <div class="mb-3">
            <a href="" @onclick="Recuperar">Olvidaste tu contraseña</a>
        </div>
        <button type="button" class="btn btn-primary" @onclick="ValidateData">Iniciar Sesion</button>
        @if (band)
        {
            <div class="alert alert-danger" role="alert">
                Usuario o Contraseña incorrecta. Intenta nuevamente!
            </div>
        }
    </form>
</div>

@code {
    [Parameter] public EventCallback<(string,bool,Usuario)> mensaje { get; set; }
    private string correo = "", contrasenia = "";
    private bool band = false, cambiarContrasenia = true;
    private string Enviarmensaje = "";
    Usuario usuario;

    private async Task ValidateData()
    {
        usuario = new Usuario("", correo, contrasenia);
        try
        {
            string query = $"select * from blog_prueba.usuarios where correo = '{usuario.getCorreo()}' and contrasenia  = '{usuario.getContraseniaEncriptada()}';";
            MySqlCommand command = new MySqlCommand(query, usuario.conexion);
            (bool band2, string nombreUsuario) = usuario.ValidarUsusario(command);
            usuario.setNombreUsuario(nombreUsuario);
            if(!band2){
                band = true;
                return;
            }
            await EnviarMensaje();
        }catch(MySqlException e){
            band = true;
        }finally{
            usuario.conexion.Close();
        }
    }

    private async Task Recuperar(){
        Enviarmensaje = "Recuperar";
        await mensaje.InvokeAsync((Enviarmensaje,false, null));
    }

    public async Task EnviarMensaje()
    {
        Enviarmensaje = "Home";
        await mensaje.InvokeAsync((Enviarmensaje,true,usuario));
    }
}